apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'com.github.triplet.play'
apply plugin: 'project-report'
apply from: '../quality/quality.gradle'

def keystorePropertiesFile = file("../keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    def vCode = buildVersionCode()

    defaultConfig {
        manifestPlaceholders = [appName: "@string/app_name"]
        applicationId "com.supercilex.robotscouter"
        targetSdkVersion 25
        versionCode vCode
        versionName "0.1.0.$vCode"
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    productFlavors {
        dev {
            // Enable pre-dexing to produce an APK that can be tested on
            // Android 5.0+ without the time-consuming DEX build processes.
            minSdkVersion 25
        }

        prod {
            // The actual minSdkVersion for the production version.
            minSdkVersion 16
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            manifestPlaceholders = [appName: "Robot Scouter DEBUG: $vCode"]
        }

        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

play {
    track = 'alpha'
    serviceAccountEmail = 'google-play-auto-publisher@robot-scouter-app.iam.gserviceaccount.com'
    jsonFile = file('google-play-auto-publisher.json')
}

configurations {
    devDebugCompile
    prodDebugCompile
    devReleaseCompile
    prodReleaseCompile
}

android.variantFilter { variant ->
    if (variant.name == 'devRelease') variant.setIgnore(true)
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:customtabs:$supportLibVersion"
    compile "com.android.support:palette-v7:$supportLibVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'

    // Firebase UI
    // Auth
    compile('com.github.SUPERCILEX.FirebaseUI-Android:firebase-ui-auth:-SNAPSHOT') {
        changing = true
    }
//    compile 'com.firebaseui:firebase-ui-auth:1.1.0'
    compile "com.google.firebase:firebase-auth:$playServicesVersion"
    compile "com.google.android.gms:play-services-auth:$playServicesVersion"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    // Database
    compile('com.github.SUPERCILEX.FirebaseUI-Android:firebase-ui-database:-SNAPSHOT') {
        changing = true
    }
//    compile 'com.firebaseui:firebase-ui-database:1.1.0'
    compile "com.google.firebase:firebase-database:$playServicesVersion"

    compile 'com.firebase:firebase-jobdispatcher:0.5.1'

    // Firebase core
    compile "com.google.firebase:firebase-core:$playServicesVersion"
    compile "com.google.firebase:firebase-messaging:$playServicesVersion"
    compile "com.google.firebase:firebase-config:$playServicesVersion"
    compile "com.google.firebase:firebase-crash:$playServicesVersion"
    compile "com.google.firebase:firebase-invites:$playServicesVersion"

    // Third party
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.clans:fab:1.6.4'
    compile 'net.yslibrary.licenseadapter:licenseadapter:1.2.4'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    devReleaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    prodReleaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'

    // Retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
}

apply plugin: 'com.google.gms.google-services'
